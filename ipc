//this is server.c
//gcc server.c -o server
//gcc client.c -o client this is to run

#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/types.h>
#include <string.h>
#include <unistd.h>

#define SHM_SIZE 1024  // Define size of shared memory

int main() {
    key_t key;
    int shm_id;
    char *shm_ptr;

    // Generate a unique key
    key = ftok("server.c", 'R');
    if (key == -1) {
        perror("ftok");
        exit(1);
    }

    // Create shared memory segment
    shm_id = shmget(key, SHM_SIZE, IPC_CREAT | 0666);
    if (shm_id == -1) {
        perror("shmget");
        exit(1);
    }

    // Attach to shared memory
    shm_ptr = shmat(shm_id, NULL, 0);
    if (shm_ptr == (char *) -1) {
        perror("shmat");
        exit(1);
    }

    // Write message to shared memory
    printf("Server: Writing message to shared memory...\n");
    strcpy(shm_ptr, "Hello from server!");

    // Wait for the client to read the message
    printf("Server: Waiting for client to read the message...\n");
    sleep(10);

    // Detach from shared memory
    if (shmdt(shm_ptr) == -1) {
        perror("shmdt");
        exit(1);
    }

    // Optionally, remove the shared memory (commented out in case client needs it)
    // shmctl(shm_id, IPC_RMID, NULL);

    return 0;
}


------------------------------------------------------------------------------

//client.c
#include <stdio.h>
#include <stdlib.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/types.h>
#include <string.h>

#define SHM_SIZE 1024  // Define size of shared memory

int main() {
    key_t key;
    int shm_id;
    char *shm_ptr;

    // Generate the same key used by the server
    key = ftok("server.c", 'R');
    if (key == -1) {
        perror("ftok");
        exit(1);
    }

    // Access the shared memory segment
    shm_id = shmget(key, SHM_SIZE, 0666);
    if (shm_id == -1) {
        perror("shmget");
        exit(1);
    }

    // Attach to shared memory
    shm_ptr = shmat(shm_id, NULL, 0);
    if (shm_ptr == (char *) -1) {
        perror("shmat");
        exit(1);
    }

    // Read the message from shared memory
    printf("Client: Reading message from shared memory...\n");
    printf("Client: Received message: %s\n", shm_ptr);

    // Detach from shared memory
    if (shmdt(shm_ptr) == -1) {
        perror("shmdt");
        exit(1);
    }

    return 0;
}
